{"version":3,"sources":["componenet/Client.js","componenet/Bikecard.js","componenet/Bikedata.js","componenet/Slider.js","componenet/Filterproperty.js","componenet/Filter.js","componenet/Navbar.js","UI/Header.js","UI/SiteContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Supabase","createClient","Bikecard","prop","className","id","src","alt","make","for","capacity","hp","Bikedata","React","useState","bikedata","assigndata","useEffect","supabase_bikedata","a","from","select","data","console","log","then","val","map","Displacement","power","Slider","type","min","max","value","class","Filterproperty","fltr1","unit","Filter","Navbar","Header","SiteContainer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8YAMaA,EAAWC,YAJJ,2CAElB,uJ,eC0BaC,EA1BE,SAACC,GAChB,OACE,sBAAKC,UAAU,gBAAf,UACM,qBAAKC,GAAG,QAAR,SACE,qBAAKC,IAAI,yFAAyFC,IAAI,OAE1G,sBAAKF,GAAG,WAAR,UACI,qBAAKA,GAAG,gBAAR,SACI,qBAAKC,IAAI,sHAAsHC,IAAI,OAEvI,6BAAKJ,EAAKK,OACV,sBAAKJ,UAAU,gBAAf,UACI,sBAAKA,UAAU,cAAf,UACI,uBAAOK,IAAI,GAAX,sBACA,4BAAIN,EAAKO,cAEb,sBAAKN,UAAU,cAAf,UACI,uBAAOK,IAAI,GAAX,mBACA,4BAAIN,EAAKQ,kBCqBdC,G,MAtCE,WACf,MAA6BC,IAAMC,SAAS,IAA5C,mBAAKC,EAAL,KAAeC,EAAf,KAoBA,OAnBAC,qBAAU,WACR,IAAMC,EAAiB,uCAAG,4BAAAC,EAAA,+EAELnB,EAASoB,KAAK,YAAYC,SAFrB,cAElBC,EAFkB,yBAGfA,GAHe,gCAMtBC,QAAQC,IAAR,MANsB,yDAAH,qDAUvBN,IAAoBO,MAAK,SAACC,GACxBV,EAAWU,EAAIJ,WAEhB,IAEHC,QAAQC,IAAIT,GAGJ,qBAAKX,UAAU,YAAf,SAGIW,EAASY,KAAI,SAACD,GACZ,OAAQ,cAAC,EAAD,CAAWlB,KAAQkB,EAAIlB,KAAME,SAAYgB,EAAIE,aAAcjB,GAAIe,EAAIG,eCtB5EC,G,kBAPA,WACX,OAAO,qBAAK1B,UAAU,4BAAf,SACA,uBAAO2B,KAAK,QAAQC,IAAI,IAAIC,IAAI,MAAMC,MAAM,KAAKC,MAAM,SAAS9B,GAAG,gBCa/D+B,EAbQ,SAACjC,GACxB,OACI,sBAAKC,UAAU,aAAf,UACI,kCAAQD,EAAKkC,MAAb,OACA,cAAC,EAAD,CAAQL,IAAO7B,EAAK6B,IAAKC,IAAO9B,EAAK8B,MACrC,gCACA,gCAAQ9B,EAAK6B,MADb,IAC0B,gCAAQ7B,EAAKmC,OADvC,IACqD,wCACrD,gCAAQnC,EAAK8B,MAFb,IAE0B,gCAAQ9B,EAAKmC,cCEhCC,EARA,WACb,OACE,qBAAKnC,UAAU,iBAAf,SACE,cAAC,EAAD,CAAgBiC,MAAM,WAAWL,IAAI,KAAKC,IAAI,UCUrCO,G,kBAfA,WACf,OACI,qBAAKpC,UAAU,SAAf,SACI,+BACI,uCACA,mDACA,sDACA,yCACA,0CACA,iDCAGqC,EARD,WACd,OACI,qBAAKrC,UAAU,SAAf,SACI,cAAC,EAAD,OCSOsC,EATO,WAElB,OAAO,sBAAKtC,UAAU,eAAf,UACH,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCCOuC,MARf,WACE,OACY,qBAAKvC,UAAU,MAAf,SACE,cAAC,EAAD,OCKDwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.abf5cb18.chunk.js","sourcesContent":["import { createClient } from \"@supabase/supabase-js\";\n\nconst supabaseUrl = \"https://druziwbgiwqqaapdhrrz.supabase.co\";\nconst supabaseAnonKey =\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTYzODg1MjY1NSwiZXhwIjoxOTU0NDI4NjU1fQ.4ZFhwYW8RUEdO8WGJeJYC7kOW6iJhIPhOIks9FFOnPs\";\n\nexport const Supabase = createClient(supabaseUrl, supabaseAnonKey);\n","\nimport \"./Bikecard.css\";\n\n\nconst Bikecard = (prop) => {\n  return(\n    <div className=\"bikeComponent\">\n          <div id=\"image\">\n            <img src=\"https://moto-trips.pl/wp-content/uploads/2020/11/315042_2021_HONDA_NC750X-1536x864.jpg\" alt=\"\" />\n        </div>\n        <div id=\"bikeDesc\">\n            <div id=\"logoContainer\">\n                <img src=\"https://moto-trips.pl/wp-content/uploads/elementor/thumbs/logo-honda-ojxxoyjmo6r7cwioln7tkgw1tpps2g6nd1d4mxyjxw.png\" alt=\"\" />\n            </div>\n            <h3>{prop.make}</h3>\n            <div className=\"descContainer\">\n                <div className=\"descElement\">\n                    <label for=\"\">Capacity</label>\n                    <p>{prop.capacity}</p>\n                </div>\n                <div className=\"descElement\">\n                    <label for=\"\">Power</label>\n                    <p>{prop.hp}</p>\n                </div>\n            </div>\n        </div>  \n    </div>\n  );\n};\n\nexport default Bikecard;\n","import { Supabase } from \"./Client\";\nimport React, { useEffect, useState } from \"react\";\nimport Bikecard from \"./Bikecard\";\nimport './bikedata.css'\n\nconst Bikedata = () => {\n  let [bikedata, assigndata] = React.useState([]);\n  useEffect(() => {\n    const supabase_bikedata = async () => {\n      try{\n        let data = await Supabase.from(\"bikedata\").select();\n        return data;\n      }\n      catch(error){\n        console.log(error);\n      }\n    };\n\n    supabase_bikedata().then((val) => {\n      assigndata(val.data);\n    });\n  }, []);\n\n  console.log(bikedata);\n\n  \n  return (<div className=\"container\">\n\n            {\n              bikedata.map((val)=>{\n                return (<Bikecard  make = {val.make} capacity = {val.Displacement} hp={val.power}/>)\n\n              })\n\n            }\n               \n              {/* <Bikecard make = \"Bajaj\" capacity = \"200\" hp=\"23\"/>  \n              <Bikecard make = \"TVS\" capacity = \"200\" hp=\"21\"/>    */}\n            </div>\n            );\n};\n\n\nexport default Bikedata;\n","import './slider.css'\nconst Slider = ()=>{\n    return(<div className=\"slidecontainer col-4 mr-2\">\n           <input type=\"range\" min=\"1\" max=\"100\" value=\"50\" class=\"slider\" id=\"myRange\"/>\n           </div>\n        );\n}\n\nexport default Slider;","import './filterproperty.css';\nimport Slider from './Slider';\n\nconst Filterproperty = (prop) => {\nreturn (\n    <div className='sliderProp'>\n        <label>{prop.fltr1} </label>\n        <Slider min = {prop.min} max = {prop.max}/>\n        <div>\n        <label>{prop.min}</label> <label>{prop.unit}</label> <label>\"-\"</label> \n        <label>{prop.max}</label> <label>{prop.unit}</label> \n        </div>\n    </div>\n    )\n}\n\nexport default Filterproperty;","import \"./filter.css\";\n// import Slider from './Slider';\nimport Filterproperty from \"./Filterproperty\";\n\nconst Filter = () => {\n  return (\n    <div className=\"filterprop row\">\n      <Filterproperty fltr1=\"capacity\" min=\"23\" max=\"55\" />\n    </div>\n  );\n};\n\nexport default Filter;\n","import './navbar.css';\n\nconst Navbar = () =>{\nreturn(\n    <div className='navbar'>\n        <ul>\n            <li>Home </li>\n            <li>Motor Cycle Test </li>\n            <li>Motor Cycle Catalog </li>\n            <li>Routes </li>\n            <li>Another </li>\n            <li>Contact </li>\n        </ul>\n    </div>\n);\n}\n\nexport default Navbar;","import './Header.css';\nimport Navbar from '../componenet/Navbar';\n\nconst Header =()=>{\nreturn(\n    <div className='header'>\n        <Navbar />\n    </div>\n)\n}\n\nexport default Header;","import Bikedata from '../componenet/Bikedata';\nimport Filter from '../componenet/Filter';\nimport './SiteContainer.css';\nimport Header from './Header';\n\n\nconst SiteContainer = () =>{\n\n    return(<div className=\"siteProperty\">\n        <Header/>\n        <Filter />\n        <Bikedata />\n    </div>)\n} \n\nexport default SiteContainer;","import './App.css'\n import SiteContainer from \"./UI/SiteContainer\";\n\n\nfunction App() {\n  return (\n              <div className=\"App\">\n                <SiteContainer />\n              </div>\n          );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}